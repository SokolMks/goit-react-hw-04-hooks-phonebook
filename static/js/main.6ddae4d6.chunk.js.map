{"version":3,"sources":["components/Section/Section.module.css","components/Contacts/Contacts.module.css","components/Section/Section.js","components/Phonebook/Phonebook.js","components/Contacts/Contacts.js","AppHook.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","Section","children","className","style","section","PhoneBook","submitForm","useState","name","setName","number","setNumber","handleChangeInput","e","value","currentTarget","target","formReset","containerForm","onSubmit","preventDefault","title","type","onChange","pattern","required","btn","Contacts","contactsList","onDeleteContact","filterContacts","onChangeFilter","container","list","label","map","id","listElement","onClick","AppHook","contacts","setContacts","filter","setFilter","useEffect","cont","localStorage","getItem","parsContacts","JSON","parse","setItem","stringify","normalazFilter","toLowerCase","filterListContacts","contact","includes","alert","elContact","shortid","generate","prevState","mainListContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ddae4d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__33ETV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1rkgu\",\"title\":\"Contacts_title__1Jpvn\",\"list\":\"Contacts_list__3JiIP\",\"listElement\":\"Contacts_listElement__2IrQi\",\"btn\":\"Contacts_btn__3SVPv\",\"label\":\"Contacts_label__a-MmI\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Section.module.css\";\r\n\r\nconst Section = ({ children }) => <div className={style.section}>{children}</div>;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import { useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Phonebook.module.css\";\r\n\r\nfunction PhoneBook({ submitForm }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    if (e.target.name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if(e.target.name === \"number\") {\r\n      setNumber(value);  \r\n    }\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    submitForm({name, number});\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.containerForm} onSubmit={onSubmitForm}>\r\n      <h2 className={style.title}>Phonebook</h2>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChangeInput}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeInput}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n  submitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhoneBook;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({\r\n  contactsList,\r\n  onDeleteContact,\r\n  filterContacts,\r\n  onChangeFilter,\r\n}) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <h2 className={style.title}>Contacts</h2>\r\n        <ul className={style.list}>\r\n          <label className={style.label}>\r\n            Find contacts by name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={filterContacts}\r\n              onChange={onChangeFilter}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          {contactsList.map(({ id, name, number }) => (\r\n            <li key={id} className={style.listElement}>\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={style.btn} onClick={() => onDeleteContact(id)}>\r\n                Delete contact\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contactsList: PropTypes.array.isRequired,\r\n  mainListContact: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  filterContacts: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contacts;","import { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Section from \"./components/Section/Section\";\r\nimport PhoneBook from \"./components/Phonebook/Phonebook\";\r\nimport Contacts from \"./components/Contacts/Contacts\";\r\n\r\nfunction AppHook() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const cont = localStorage.getItem(\"contacts\");\r\n    const parsContacts = JSON.parse(cont);\r\n\r\n    if(parsContacts) {\r\n      setContacts(parsContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const dataSubmitForm = ({ name, number }) => {\r\n    const arrName = contacts.map((contact) => contact.name.toLowerCase());\r\n    const checkName = arrName.includes(name.toLowerCase());\r\n\r\n    if(checkName) {\r\n      alert(\"This name is already in the list of contacts!\");\r\n      return;\r\n    } else {\r\n      const elContact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        number\r\n      };\r\n\r\n      setContacts((prevState) => [elContact, ...prevState]);\r\n    }\r\n  };\r\n\r\n  const changeFilterContacts = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const normalazFilter = filter.toLowerCase();\r\n  const filterListContacts = contacts.filter((contact) => \r\n    contact.name.toLowerCase().includes(normalazFilter)\r\n  );\r\n\r\n  return (\r\n    <Section>\r\n      <PhoneBook submitForm={dataSubmitForm} />\r\n\r\n      <Contacts\r\n        mainListContact={contacts}\r\n        onChangeFilter={changeFilterContacts}\r\n        filterContacts={filter}\r\n        contactsList={filterListContacts}\r\n        onDeleteContact={deleteContact}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nexport default AppHook;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import App from './App';\nimport AppHook from './AppHook'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppHook />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"Phonebook_containerForm__2XcMl\",\"title\":\"Phonebook_title__3MnFG\",\"btn\":\"Phonebook_btn__2l6jE\"};"],"sourceRoot":""}